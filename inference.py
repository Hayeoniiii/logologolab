# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CP-7EPfgn4Zzmnh4j_jaFkOQrre42ZFg
"""

from diffusers import FluxPipeline
from safetensors.torch import load_file
import torch, os
from PIL import Image

def find_flux_model_attr(pipeline):
    for name, module in vars(pipeline).items():
        if module.__class__.__name__ == "FluxTransformer2DModel":
            return name, module
    raise AttributeError("FluxTransformer2DModel 컴포넌트를 찾을 수 없음")

def apply_lora(module, lora_path):
    print(f"LoRA 적용 중: {lora_path}")
    state_dict = load_file(lora_path)
    module.load_state_dict(state_dict, strict=False)
    print("LoRA 적용 완료")

def main():
    base_model_id = "black-forest-labs/FLUX.1-dev"
    lora_path     = "/root/pytorch_lora_weights.safetensors"
    prompt        = "logo logo lab, high quality, logo of my brand, sky blue color font"
    output_dir    = "./outputs"
    output_name   = "flux_output_logo_lora3.png"

    pipe = FluxPipeline.from_pretrained(
        base_model_id, torch_dtype=torch.bfloat16
    ).to("cuda")

    attr_name, flux_model = find_flux_model_attr(pipe)
    apply_lora(flux_model, lora_path)
    setattr(pipe, attr_name, flux_model)

    image = pipe(
        prompt=prompt,
        num_inference_steps=50,
        guidance_scale=3.5,
        height=1024,
        width=1024
    ).images[0]

    os.makedirs(output_dir, exist_ok=True)
    image.save(os.path.join(output_dir, output_name))
    print(f"저장 완료: {output_dir}/{output_name}")

if __name__ == "__main__":
    main()
